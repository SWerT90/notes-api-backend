{"version":3,"sources":["Note.js","Notification.js","Footer.js","App.js","services/notes/getAllNotes.js","services/notes/updateNote.js","services/notes/createNote.js","index.js"],"names":["Note","note","toogleImportance","label","important","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","loading","setLoading","error","setError","showAll","setShowAll","useEffect","axios","get","then","response","data","catch","setTimeout","id","find","put","updateNote","map","notesToShow","filter","onSubmit","event","preventDefault","post","createNote","title","userId","Math","random","prevNotes","concat","type","onChange","target","value","ReactDOM","render","document","getElementById"],"mappings":"8KAAaA,EAAO,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBAErBC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACE,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,QCP7BK,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OAAgB,OAAZA,EACK,KAIP,qBAAKJ,UAAU,QAAf,SACGI,K,gBCPMC,EAAS,WAOpB,OACE,sBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAIV,UACE,uBACA,wGCAS,SAASC,IAAO,MAKHC,mBAAS,IALN,mBAKtBC,EALsB,KAKfC,EALe,OAMCF,mBAAS,IANV,mBAMtBG,EANsB,KAMbC,EANa,OAOCJ,mBAAS,SAPV,mBAOtBK,EAPsB,KAObC,EAPa,OAQHN,mBAAS,MARN,mBAQtBO,EARsB,KAQfC,EARe,OASCR,oBAAS,GATV,mBAStBS,EATsB,KASbC,EATa,KAW7BC,qBAAU,WACRL,GAAW,GCnBNM,IAAMC,IAAI,cACdC,MAAK,SAAAC,GAEJ,OADiBA,EAATC,QDmBPF,MAAK,SAAAb,GACJC,EAASD,GACTK,GAAW,MAEZW,OAAM,SAAAV,GACLD,GAAW,GACXE,EAAS,gDAAD,OAAiDD,EAAMd,UAC/DyB,YAAW,WACTV,EAAS,QACR,UAEN,IAEH,IAiCMtB,EAAmB,SAACiC,GACxB,OAAO,WACL,IAAMlC,EAAOgB,EAAMmB,MAAK,SAAAnC,GAAI,OAAIA,EAAKkC,KAAOA,MEtExB,SAAClC,GACzB,OAAO2B,IAAMS,IAAN,qBAAwBpC,EAAKkC,IAAMlC,GACvC6B,MAAK,SAAAC,GAEJ,OADiBA,EAATC,SFqERM,CADiB,2BAAQrC,GAAR,IAAcG,WAAYH,EAAKG,aAE7C0B,MAAK,SAAAX,GACJD,EAASD,EAAMsB,KAAI,SAAAtC,GAAI,OAAIA,EAAKkC,KAAOA,EAAKlC,EAAOkB,SAEpDc,OAAM,SAAAV,GACLC,EAAS,+DAAD,OAAgED,EAAMd,UAC9EyB,YAAW,WACTV,EAAS,QACR,UASLgB,EAAcf,EAChBR,EACAA,EAAMwB,QAAO,SAAAxC,GAAI,OAAIA,EAAKG,aAE9B,OACE,gCACE,uCACA,cAAC,EAAD,CAAcK,QAASc,IAErBF,EAAU,cAAgB,GAE5B,8BACE,yBAAQd,QAhBQ,WACpBmB,GAAW,kBAAOD,MAed,kBACQA,EAAU,YAAc,WAGlC,6BAEIe,EAAYD,KAAI,SAAAtC,GAAI,OAClB,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,iBAAkBA,EAAiBD,EAAKkC,KAA7DlC,EAAKkC,SAKtB,uBAAMO,SA1EW,SAACC,GACpBA,EAAMC,iBGxCgB,SAACzB,GACzB,OAAOS,IAAMiB,KAAK,aAAc1B,GAC7BW,MAAK,SAAAC,GAEJ,OADiBA,EAATC,QH8CVc,CAPyB,CACvBC,MAAO5B,EACPb,QAASa,EACT6B,OAAQ,EACR5C,UAAW6C,KAAKC,SAAW,KAI1BpB,MAAK,SAAAX,GAGJD,GAAS,SAAAiC,GAAS,OAAIA,EAAUC,OAAOjC,SAGxCc,OAAM,SAAAV,GACLC,EAAS,oDAAD,OAAkDD,EAAMd,UAChEyB,YAAW,WACTV,EAAS,QACR,QAKPJ,EAAW,KAgDT,UACE,uBAAOiC,KAAK,OAAOC,SA/EJ,SAACX,GACpBvB,EAAWuB,EAAMY,OAAOC,QA8EuBA,MAAOrC,IAClD,mDAEF,cAAC,EAAD,O,MI9FNsC,IAASC,OACP,cAAC3C,EAAD,IACA4C,SAASC,eAAe,W","file":"static/js/main.996b19e0.chunk.js","sourcesContent":["export const Note = ({ note, toogleImportance }) => {\r\n  // const { note } = props\r\n  const label = note.important ? 'make not important' : 'make important'\r\n\r\n  return (\r\n    <li className='note'>\r\n      {note.content}\r\n      <button onClick={toogleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n","export const Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className='error'>\r\n      {message}\r\n    </div>\r\n  )\r\n}\r\n","export const Footer = () => {\r\n  const footerStyle = {\r\n    color: 'green',\r\n    fontStyle: 'italic',\r\n    fontSize: 16\r\n  }\r\n\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>Note app, Department of Computer Science, University of Mibas 2021</em>\r\n    </div>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\nimport { Note } from './Note.js'\nimport { Notification } from './Notification'\nimport { getAllNotes } from './services/notes/getAllNotes.js'\nimport { createNote } from './services/notes/createNote.js'\nimport { updateNote } from './services/notes/updateNote.js'\nimport { Footer } from './Footer.js'\n\n// const notes = undefined;\n\nexport default function App () {\n  // if (typeof notes === 'undefined' || notes.length === 0) {\n  //   return \"No tenemos notas que mostrar\"\n  // }\n\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [loading, setLoading] = useState('false')\n  const [error, setError] = useState(null)\n  const [showAll, setShowAll] = useState(true)\n\n  useEffect(() => {\n    setLoading(true)\n    getAllNotes()\n      .then(notes => {\n        setNotes(notes)\n        setLoading(false)\n      })\n      .catch(error => {\n        setLoading(false)\n        setError(`No se han podido recuperar las notas. Error: ${error.message}`)\n        setTimeout(() => {\n          setError(null)\n        }, 5000)\n      })\n  }, [])\n\n  const handleChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n    const noteToAddToState = {\n      title: newNote,\n      content: newNote,\n      userId: 1,\n      important: Math.random() < 0.5\n    }\n\n    createNote(noteToAddToState)\n      .then(newNote => {\n      // con la función y prevNotes usamos justamente el último estado\n      // puede que con el concat, notes no tenga el valor que queramos, por estar dentro de una promesa\n        setNotes(prevNotes => prevNotes.concat(newNote))\n      // setNotes(notes.concat(newNote));\n      })\n      .catch(error => {\n        setError(`No se ha podido añadir una nueva nota. Error: ${error.message}`)\n        setTimeout(() => {\n          setError(null)\n        }, 5000)\n      })\n\n    // setNotes([...notes, noteToAddToState])\n    // setNotes(notes.concat(noteToAddToState));\n    setNewNote('')\n  }\n\n  const toogleImportance = (id) => {\n    return () => {\n      const note = notes.find(note => note.id === id)\n      const changedNote = { ...note, important: !note.important }\n      updateNote(changedNote)\n        .then(newNote => {\n          setNotes(notes.map(note => note.id !== id ? note : newNote))\n        })\n        .catch(error => {\n          setError(`No se ha podido actualizar la importacia de la nota. Error: ${error.message}`)\n          setTimeout(() => {\n            setError(null)\n          }, 5000)\n        })\n    }\n  }\n\n  const handleShowAll = () => {\n    setShowAll(() => !showAll)\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={error} />\n      {\n        loading ? 'Cargando...' : ''\n      }\n      <div>\n        <button onClick={handleShowAll}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ol>\n        {\n          notesToShow.map(note => (\n            <Note key={note.id} note={note} toogleImportance={toogleImportance(note.id)} />\n          ))\n        }\n\n      </ol>\n      <form onSubmit={handleSubmit}>\n        <input type='text' onChange={handleChange} value={newNote} />\n        <button>Crear nota</button>\n      </form>\n      <Footer />\n      {/* {error ? <span style={{ color: 'red' }}>{error}</span> : ''} */}\n    </div>\n  )\n\n  // return (\n  //   <div>\n  //     <h1>Notes</h1>\n  //     <button onClick={handleShowAll}>{showAll ? \"Show only important\" : \"Show all\"}</button>\n  //     <ol>\n  //       {\n  //         notes\n  //         .filter(note => {\n  //           if (showAll === true) return true;\n  //           return note.important === true;\n  //         })\n  //         .map( note => (\n  //           <Note key={note.id} {...note} />\n  //         ))\n  //       }\n\n  //     </ol>\n  //     <form onSubmit={handleSubmit}>\n  //       <input type='text' onChange={handleChange} value={newNote}/>\n  //       <button>Crear nota</button>\n  //     </form>\n  //   </div>\n  // );\n};\n","import axios from 'axios'\r\n\r\nexport const getAllNotes = () => {\r\n  return axios.get('/api/notes')\r\n    .then(response => {\r\n      const { data } = response\r\n      return data\r\n    })\r\n}\r\n","import axios from 'axios'\r\n\r\nexport const updateNote = (note) => {\r\n  return axios.put(`/api/notes/${note.id}`, note)\r\n    .then(response => {\r\n      const { data } = response\r\n      return data\r\n    })\r\n}\r\n","import axios from 'axios'\r\n\r\nexport const createNote = (newNote) => {\r\n  return axios.post('/api/notes', newNote)\r\n    .then(response => {\r\n      const { data } = response\r\n      return data\r\n    })\r\n}\r\n","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\n// const notes = [\n//   {\n//     \"userId\": 1,\n//     \"id\": 1,\n//     \"title\": \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n//     \"body\": \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\"\n//   },\n//   {\n//     \"userId\": 1,\n//     \"id\": 2,\n//     \"title\": \"qui est esse\",\n//     \"body\": \"est rerum tempore vitae\\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\\nqui aperiam non debitis possimus qui neque nisi nulla\"\n//   },\n//   {\n//     \"userId\": 1,\n//     \"id\": 3,\n//     \"title\": \"ea molestias quasi exercitationem repellat qui ipsa sit aut\",\n//     \"body\": \"et iusto sed quo iure\\nvoluptatem occaecati omnis eligendi aut ad\\nvoluptatem doloribus vel accusantium quis pariatur\\nmolestiae porro eius odio et labore et velit aut\"\n//   }\n// ]\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}